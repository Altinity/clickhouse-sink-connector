{{- if .Values.postgres -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: sink-connector-lightweight-config
data:
  config.yml: |-
    name: "debezium-embedded-postgres"
    database.hostname: "postgres"
    database.port: "5432"
    database.user: "root"
    database.password: "root"
    database.server.name: "ER54"
    schema.include.list: public
    plugin.name: "pgoutput"
    table.include.list: "public.tm,public.tm2"
    clickhouse.server.url: "clickhouse"
    clickhouse.server.user: "root"
    clickhouse.server.password: "root"
    clickhouse.server.port: "8123"
    database.allowPublicKeyRetrieval: "true"
    snapshot.mode: "initial"
    offset.flush.interval.ms: 5000
    connector.class: "io.debezium.connector.postgresql.PostgresConnector"
    offset.storage: "io.debezium.storage.jdbc.offset.JdbcOffsetBackingStore"
    offset.storage.offset.storage.jdbc.offset.table.name: "altinity_sink_connector.replica_source_info"
    offset.storage.jdbc.url: "jdbc:clickhouse://clickhouse:8123/altinity_sink_connector"
    offset.storage.jdbc.user: "root"
    offset.storage.jdbc.password: "root"
    offset.storage.offset.storage.jdbc.offset.table.ddl: "CREATE TABLE if not exists %s
    (
      `id` String,
      `offset_key` String,
      `offset_val` String,
      `record_insert_ts` DateTime,
      `record_insert_seq` UInt64,
      `_version` UInt64 MATERIALIZED toUnixTimestamp64Nano(now64(9))
    )
    ENGINE = ReplacingMergeTree(_version)
    ORDER BY id
    SETTINGS index_granularity = 8192"
    offset.storage.offset.storage.jdbc.offset.table.delete: "delete from %s where 1=1"
    schema.history.internal: "io.debezium.storage.jdbc.history.JdbcSchemaHistory"
    schema.history.internal.jdbc.url: "jdbc:clickhouse://clickhouse:8123/altinity_sink_connector"
    schema.history.internal.jdbc.user: "root"
    schema.history.internal.jdbc.password: "root"
    schema.history.internal.jdbc.schema.history.table.ddl: "CREATE TABLE if not exists %s
    (`id` VARCHAR(36) NOT NULL, `history_data` VARCHAR(65000), `history_data_seq` INTEGER, `record_insert_ts` TIMESTAMP NOT NULL, `record_insert_seq` INTEGER NOT NULL) ENGINE=ReplacingMergeTree(record_insert_seq) order by id"

    schema.history.internal.jdbc.schema.history.table.name: "altinity_sink_connector.replicate_schema_history"
    enable.snapshot.ddl: "true"
    auto.create.tables: "true"
    database.dbname: "public"
{{- else -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: sink-connector-lightweight-config
data:
    config.yml: |-
      name: "company-1"
      database.hostname: "mysql"
      database.port: "3306"
      database.user: "root"
      database.password: "password"
      database.server.name: "ER54"
      database.include.list: "test"
      #table.include.list=sbtest1
      clickhouse.server.url: "chi-argocd-demo-0-0"
      clickhouse.server.user: "root"
      clickhouse.server.pass: "secretsecret"
      clickhouse.server.port: "8123"
      database.allowPublicKeyRetrieval: "true"
      snapshot.mode: "initial"
      offset.flush.interval.ms: "5000"
      connector.class: "io.debezium.connector.mysql.MySqlConnector"
      offset.storage: "io.debezium.storage.jdbc.offset.JdbcOffsetBackingStore"
      offset.storage.offset.storage.jdbc.offset.table.name: "altinity_sink_connector.replica_source_info"
      offset.storage.jdbc.url: "jdbc:clickhouse://chi-argocd-demo-0-0:8123/altinity_sink_connector"
      offset.storage.jdbc.user: "root"
      offset.storage.jdbc.password: "secretsecret"
      offset.storage.offset.storage.jdbc.offset.table.ddl: "CREATE TABLE if not exists %s
        (
          `id` String,
          `offset_key` String,
          `offset_val` String,
          `record_insert_ts` DateTime,
          `record_insert_seq` UInt64,
          `_version` UInt64 MATERIALIZED toUnixTimestamp64Nano(now64(9))
      )
      ENGINE = ReplacingMergeTree(_version)
      ORDER BY id
      SETTINGS index_granularity = 8192"
      offset.storage.offset.storage.jdbc.offset.table.delete: "delete from %s where 1=1"
      schema.history.internal: "io.debezium.storage.jdbc.history.JdbcSchemaHistory"
      schema.history.internal.jdbc.url: "jdbc:clickhouse://chi-argocd-demo-0-0:8123/altinity_sink_connector"
      schema.history.internal.jdbc.user: "root"
      schema.history.internal.jdbc.password: "secretsecret"
      schema.history.internal.jdbc.schema.history.table.ddl: "CREATE TABLE if not exists %s
      (`id` VARCHAR(36) NOT NULL, `history_data` VARCHAR(65000), `history_data_seq` INTEGER, `record_insert_ts` TIMESTAMP NOT NULL, `record_insert_seq` INTEGER NOT NULL) ENGINE=ReplacingMergeTree(record_insert_seq) order by id"

      schema.history.internal.jdbc.schema.history.table.name: "altinity_sink_connector.replicate_schema_history"
      enable.snapshot.ddl: "true"
{{- end -}}