name= "engine"
database.server.name= "clickhouse-ddl"
database.server.id= 976
converter.schemas.enable= "true"
schemas.enable= true
topic.prefix=embeddedconnector
offset.storage=io.debezium.storage.jdbc.offset.JdbcOffsetBackingStore
offset.storage.jdbc.offset.table.name= "default.replica_source_info"
offset.storage.jdbc.url= "jdbc:clickhouse://clickhouse:8123"
offset.storage.jdbc.user= "root"
offset.storage.jdbc.password= "root"
offset.storage.jdbc.offset.table.ddl="CREATE TABLE %s(`id` String, `offset_key` String, `offset_val` String, `record_insert_ts` DateTime, `record_insert_seq` UInt64, `_version` UInt64 MATERIALIZED toUnixTimestamp64Nano(now64(9)))ENGINE = ReplacingMergeTree(_version) ORDER BY id SETTINGS index_granularity = 8192"
offset.storage.jdbc.offset.table.delete="delete from %s where 1=1"
schema.history.internal=io.debezium.storage.jdbc.history.JdbcSchemaHistory
schema.history.internal.jdbc.url="jdbc:clickhouse://clickhouse:8123"
schema.history.internal.jdbc.user="root"
schema.history.internal.jdbc.password="root"
schema.history.internal.schema.history.table.ddl="CREATE TABLE %s(`id` VARCHAR(36) NOT NULL, `history_data` VARCHAR(65000), `history_data_seq` INTEGER, `record_insert_ts` TIMESTAMP NOT NULL, `record_insert_seq` INTEGER NOT NULL) Engine=ReplacingMergeTree(record_insert_seq) order by id"
schema.history.internal.schema.history.table.name="default.replicate_schema_history"
auto.create.tables= false
replacingmergetree.delete.column=_sign
metrics.enable= true
metrics.port= 8083
snapshot.mode= "initial"
replica.status.view="CREATE VIEW IF NOT EXISTS %s.show_replica_status AS SELECT now() - fromUnixTimestamp(JSONExtractUInt(offset_val, 'ts_sec')) AS seconds_behind_source,  toDateTime(fromUnixTimestamp(JSONExtractUInt(offset_val, 'ts_sec')), 'UTC') AS utc_time, fromUnixTimestamp(JSONExtractUInt(offset_val, 'ts_sec')) AS local_time FROM %s FINAL"